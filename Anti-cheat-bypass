-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Local Player
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 5)
local humanoid = character:WaitForChild("Humanoid", 5)

-- Validate character
if not humanoidRootPart or not humanoid then
    warn("Character not found. Walking...")
    player.CharacterAdded:Wait()
    character = player.Character
    humanoidRootPart = character:WaitForChild("HumanoidRootPart", 5)
    humanoid = character:WaitForChild("Humanoid", 5)
    if not humanoidRootPart or not humanoid then
        warn("Character load failed. Script terminated.")
        return
    end
end

-- Variables
local flying = false
local noclipping = false
local speed = 50
local mobileMovement = {x = 0, y = 0}
local control = {forward = 0, backward = 0, left = 0, right = 0, up = 0, down = 0}

local flyConnection
local noclipConnection
local antiPullbackConnection
local wallDetectConnection
local velocityBypassConnection

-- Position tracking (ENHANCED)
local lastPosition = humanoidRootPart.Position
local positionHistory = {}
local maxHistorySize = 60
local pullbackThreshold = 0.5
local stuckCounter = 0
local lastSafePosition = humanoidRootPart.CFrame

-- Wall Detection Variables
local inWallCounter = 0
local lastOutOfWallTime = tick()

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "NoclipFlyGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = player:WaitForChild("PlayerGui", 5)

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 160, 0, 170)
Frame.Position = UDim2.new(1, -170, 0, 10)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.Text = "Fly & Noclip Bypass"
Title.TextColor3 = Color3.fromRGB(200, 200, 200)
Title.TextSize = 11
Title.Font = Enum.Font.GothamBold
Title.TextWrapped = true
Title.Parent = Frame

-- Fly Button
local FlyButton = Instance.new("TextButton")
FlyButton.Size = UDim2.new(0.85, 0, 0, 28)
FlyButton.Position = UDim2.new(0.075, 0, 0.2, 0)
FlyButton.BackgroundColor3 = Color3.fromRGB(50, 100, 255)
FlyButton.Text = "Fly: OFF"
FlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlyButton.TextSize = 11
FlyButton.Font = Enum.Font.GothamBold
FlyButton.Parent = Frame

-- Noclip Button
local NoclipButton = Instance.new("TextButton")
NoclipButton.Size = UDim2.new(0.85, 0, 0, 28)
NoclipButton.Position = UDim2.new(0.075, 0, 0.4, 0)
NoclipButton.BackgroundColor3 = Color3.fromRGB(100, 50, 255)
NoclipButton.Text = "Noclip: OFF"
NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.TextSize = 11
NoclipButton.Font = Enum.Font.GothamBold
NoclipButton.Parent = Frame

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.85, 0, 0, 25)
StatusLabel.Position = UDim2.new(0.075, 0, 0.6, 0)
StatusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
StatusLabel.Text = "Status: Ready"
StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
StatusLabel.TextSize = 9
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Parent = Frame

-- Wall Status Label (ใหม่)
local WallStatusLabel = Instance.new("TextLabel")
WallStatusLabel.Size = UDim2.new(0.85, 0, 0, 25)
WallStatusLabel.Position = UDim2.new(0.075, 0, 0.8, 0)
WallStatusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
WallStatusLabel.Text = "Wall: OUT"
WallStatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
WallStatusLabel.TextSize = 9
WallStatusLabel.Font = Enum.Font.Gotham
WallStatusLabel.Parent = Frame

-- Styling
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 6)
corner.Parent = Frame
for _, btn in pairs({FlyButton, NoclipButton, StatusLabel, WallStatusLabel}) do
    corner:Clone().Parent = btn
end
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(70, 70, 70)
stroke.Thickness = 1
stroke.Parent = Frame

-- ฟังก์ชันตรวจสอบว่าอยู่ในกำแพงหรือไม่
local function isInWall()
    if not humanoidRootPart then return false end
    
    local region = Region3.new(
        humanoidRootPart.Position - Vector3.new(3.5, 3.5, 3.5),
        humanoidRootPart.Position + Vector3.new(3.5, 3.5, 3.5)
    )
    region = region:ExpandToGrid(4)
    
    local parts = workspace:FindPartsInRegion3(region, character, 100)
    for _, part in pairs(parts) do
        if part.CanCollide and not part:IsDescendantOf(character) then
            return true
        end
    end
    return false
end

-- ฟังก์ชันตรวจสอบการดึงกลับ (ENHANCED)
local function detectPullback()
    if not humanoidRootPart then return false end
    
    local currentPos = humanoidRootPart.Position
    local distance = (currentPos - lastPosition).Magnitude
    
    -- ตรวจหาการเคลื่อนที่ที่ผิดปกติ (โหด)
    if distance > pullbackThreshold then
        return true
    end
    
    local moveDir = humanoid.MoveDirection + Vector3.new(mobileMovement.x, 0, mobileMovement.y)
    
    -- ถ้ากำลังเคลื่อนที่แต่ไม่มีความเร็ว = ติด
    if distance < 0.01 and moveDir.Magnitude > 0.3 then
        stuckCounter = stuckCounter + 1
        if stuckCounter > 1 then
            return true
        end
    else
        stuckCounter = 0
    end
    
    lastPosition = currentPos
    return false
end

-- ฟังก์ชันรีเซ็ต Humanoid State
local function resetHumanoidState()
    if not humanoid or not humanoidRootPart then return end
    
    humanoid.PlatformStand = false
    humanoid.Sit = false
    
    humanoid:ChangeState(Enum.HumanoidStateType.Physics)
    task.wait(0.05)
    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
    task.wait(0.05)
    humanoid:ChangeState(Enum.HumanoidStateType.Running)
    
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    humanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    humanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
    humanoidRootPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
    
    task.wait(0.1)
    humanoid.PlatformStand = false
end

-- ฟังก์ชัน Fly
local function startFly()
    if flying or not humanoidRootPart or humanoid.Health <= 0 then return end
    flying = true
    FlyButton.Text = "Fly: ON"
    FlyButton.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
    
    StatusLabel.Text = noclipping and "Status: Fly + Noclip" or "Status: Flying"
    StatusLabel.TextColor3 = noclipping and Color3.fromRGB(255, 255, 100) or Color3.fromRGB(100, 200, 255)
    
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.P = 3000
    bodyGyro.D = 500
    bodyGyro.Parent = humanoidRootPart
    
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bodyVelocity.P = 1250
    bodyVelocity.Parent = humanoidRootPart

    flyConnection = RunService.Heartbeat:Connect(function(deltaTime)
        if not flying or not humanoidRootPart or humanoid.Health <= 0 then
            stopFly()
            return
        end

        local camera = workspace.CurrentCamera
        if not camera then return end
        
        bodyGyro.CFrame = camera.CFrame

        local moveVector = Vector3.new(
            (control.right - control.left) + mobileMovement.x,
            control.up - control.down,
            (control.forward - control.backward) + mobileMovement.y
        )

        if moveVector.Magnitude > 0 then
            moveVector = moveVector.Unit
            
            local lookDirection = camera.CFrame.LookVector
            local rightDirection = camera.CFrame.RightVector
            local upDirection = Vector3.new(0, 1, 0)
            
            local direction = (lookDirection * moveVector.Z + rightDirection * moveVector.X + upDirection * moveVector.Y).Unit
            
            local targetVelocity = direction * speed
            bodyVelocity.Velocity = targetVelocity
        else
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        end
    end)
end

local function stopFly()
    if not flying then return end
    flying = false
    FlyButton.Text = "Fly: OFF"
    FlyButton.BackgroundColor3 = Color3.fromRGB(50, 100, 255)
    
    StatusLabel.Text = noclipping and "Status: Noclip Active" or "Status: Ready"
    StatusLabel.TextColor3 = noclipping and Color3.fromRGB(255, 150, 255) or Color3.fromRGB(100, 255, 100)
    
    if humanoidRootPart then
        for _, child in pairs(humanoidRootPart:GetChildren()) do
            if child:IsA("BodyGyro") or child:IsA("BodyVelocity") then
                child:Destroy()
            end
        end
    end
    
    resetHumanoidState()
    
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
end

-- ฟังก์ชัน Noclip (ENHANCED)
local function startNoclip()
    if noclipping then return end
    noclipping = true
    NoclipButton.Text = "Noclip: ON"
    NoclipButton.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
    
    StatusLabel.Text = flying and "Status: Fly + Noclip" or "Status: Noclip Active"
    StatusLabel.TextColor3 = flying and Color3.fromRGB(255, 255, 100) or Color3.fromRGB(255, 150, 255)
    
    print("Noclip ON - Wall Detection Active")
    
    pcall(function()
        humanoidRootPart:SetNetworkOwner(player)
    end)
    
    positionHistory = {}
    lastPosition = humanoidRootPart.Position
    inWallCounter = 0
    lastOutOfWallTime = tick()
    
    -- Noclip Loop - ปิด CanCollide ทั้งหมด
    noclipConnection = RunService.Stepped:Connect(function()
        if not noclipping or not character or not humanoidRootPart then return end
        
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        
        if humanoidRootPart then
            humanoidRootPart.CanCollide = false
            humanoidRootPart.AssemblyLinearVelocity = humanoidRootPart.Velocity
            
            if humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
            end
        end
    end)
    
    -- Wall Detection Loop (ตรวจจับออกจากกำแพง)
    wallDetectConnection = RunService.Heartbeat:Connect(function()
        if not noclipping or not humanoidRootPart then return end
        
        local isInWallNow = isInWall()
        
        if isInWallNow then
            inWallCounter = 0
            WallStatusLabel.Text = "Wall: IN ⚠️"
            WallStatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        else
            inWallCounter = inWallCounter + 1
            lastOutOfWallTime = tick()
            
            if inWallCounter > 5 then
                WallStatusLabel.Text = "Wall: OUT ✓"
                WallStatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            end
        end
    end)
    
    -- Anti-Pullback Loop - เก็บตำแหน่งปลอดภัยทุกวินาที
    antiPullbackConnection = RunService.Heartbeat:Connect(function(deltaTime)
        if not noclipping or not humanoidRootPart then return end
        
        local moveDir = humanoid.MoveDirection + Vector3.new(mobileMovement.x, 0, mobileMovement.y)
        local isMoving = moveDir.Magnitude > 0
        
        -- บันทึกตำแหน่งปลอดภัย - ทุก frame เมื่อมีการเคลื่อนที่
        if isMoving then
            lastSafePosition = humanoidRootPart.CFrame
            table.insert(positionHistory, humanoidRootPart.CFrame)
            if #positionHistory > maxHistorySize then
                table.remove(positionHistory, 1)
            end
        end
        
        -- ตรวจสอบการดึงกลับอย่างโหดๆ
        if detectPullback() and isMoving then
            -- วิธีที่ 1: กระโดดกลับตำแหน่งล่าสุด 5 ครั้ง
            for i = 1, 5 do
                humanoidRootPart.CFrame = lastSafePosition
                task.wait(0.0005)
            end
            
            -- วิธีที่ 2: รีเซ็ต velocity เสียสนิท
            humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
            humanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
            humanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            humanoidRootPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            
            -- วิธีที่ 3: บังคับอัพเดท network 5 ครั้ง
            for _ = 1, 5 do
                pcall(function()
                    humanoidRootPart:SetNetworkOwner(player)
                end)
                task.wait(0.0005)
            end
            
            -- วิธีที่ 4: ผลักตัวออกจากจุดปัญหา 3 ครั้ง
            if moveDir.Magnitude > 0 then
                moveDir = moveDir.Unit
                for j = 1, 3 do
                    humanoidRootPart.CFrame = humanoidRootPart.CFrame + (moveDir * 0.3)
                    task.wait(0.0005)
                end
            end
            
            humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
        end
        
        -- ผลักตัวไปข้างหน้า (ความเร็วแรงขึ้น)
        if isMoving and not flying then
            moveDir = moveDir.Unit
            
            local bodyVel = humanoidRootPart:FindFirstChild("NoclipPush")
            if not bodyVel then
                bodyVel = Instance.new("BodyVelocity")
                bodyVel.Name = "NoclipPush"
                bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                bodyVel.P = 5000
                bodyVel.D = 100
                bodyVel.Parent = humanoidRootPart
            end
            bodyVel.Velocity = moveDir * 30
            
            -- Nudge แรง
            humanoidRootPart.CFrame = humanoidRootPart.CFrame + (moveDir * 0.25)
        else
            local bodyVel = humanoidRootPart:FindFirstChild("NoclipPush")
            if bodyVel then
                bodyVel:Destroy()
            end
        end
        
        humanoidRootPart.AssemblyLinearVelocity = humanoidRootPart.Velocity
    end)
    
    -- Velocity Bypass Loop
    velocityBypassConnection = RunService.RenderStepped:Connect(function()
        if not noclipping or not humanoidRootPart then return end
        
        humanoidRootPart.AssemblyLinearVelocity = humanoidRootPart.Velocity
        humanoidRootPart.CanCollide = false
        
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        
        pcall(function()
            humanoidRootPart:SetNetworkOwner(player)
        end)
    end)
end

local function stopNoclip()
    if not noclipping then return end
    noclipping = false
    NoclipButton.Text = "Noclip: OFF"
    NoclipButton.BackgroundColor3 = Color3.fromRGB(100, 50, 255)
    
    StatusLabel.Text = flying and "Status: Flying" or "Status: Ready"
    StatusLabel.TextColor3 = flying and Color3.fromRGB(100, 200, 255) or Color3.fromRGB(100, 255, 100)
    
    WallStatusLabel.Text = "Wall: OFF"
    WallStatusLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if antiPullbackConnection then
        antiPullbackConnection:Disconnect()
        antiPullbackConnection = nil
    end
    
    if wallDetectConnection then
        wallDetectConnection:Disconnect()
        wallDetectConnection = nil
    end
    
    if velocityBypassConnection then
        velocityBypassConnection:Disconnect()
        velocityBypassConnection = nil
    end
    
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part:IsDescendantOf(character) then
            if part.Name == "Head" or part.Name == "Torso" or part.Name == "HumanoidRootPart" 
                or part.Name:match("Arm") or part.Name:match("Leg") 
                or part.Parent.Name == "UpperTorso" or part.Parent.Name == "LowerTorso" then
                part.CanCollide = true
            end
        end
    end
    
    if humanoidRootPart then
        local noclipPush = humanoidRootPart:FindFirstChild("NoclipPush")
        if noclipPush then
            noclipPush:Destroy()
        end
    end
    
    task.wait(0.15)
    
    if humanoidRootPart and not flying then
        local camera = workspace.CurrentCamera
        local nudgeAmount = 2
        local nudgeDirection = (camera.CFrame.LookVector + Vector3.new(0, 1, 0)).Unit * nudgeAmount
        humanoidRootPart.CFrame = humanoidRootPart.CFrame + nudgeDirection
        
        pcall(function()
            humanoidRootPart:SetNetworkOwner(player)
        end)
    end
    
    if not flying then
        task.wait(0.2)
        resetHumanoidState()
        
        if humanoid then
            humanoid.Jump = true
            task.wait(0.1)
            humanoid.Jump = false
        end
    end
    
    if humanoid then
        humanoid.WalkSpeed = 16
    end
    
    print("Noclip OFF - กลับมาเดินปกติแล้ว")
end

-- Button Events
FlyButton.MouseButton1Click:Connect(function()
    if flying then stopFly() else startFly() end
end)

NoclipButton.MouseButton1Click:Connect(function()
    if noclipping then stopNoclip() else startNoclip() end
end)

-- Keyboard Controls
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W then control.forward = 1
    elseif key == Enum.KeyCode.S then control.backward = 1
    elseif key == Enum.KeyCode.A then control.left = 1
    elseif key == Enum.KeyCode.D then control.right = 1
    elseif key == Enum.KeyCode.E then control.up = 1
    elseif key == Enum.KeyCode.Q then control.down = 1
    elseif key == Enum.KeyCode.Space then control.up = 1
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if processed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.W then control.forward = 0
    elseif key == Enum.KeyCode.S then control.backward = 0
    elseif key == Enum.KeyCode.A then control.left = 0
    elseif key == Enum.KeyCode.D then control.right = 0
    elseif key == Enum.KeyCode.E then control.up = 0
    elseif key == Enum.KeyCode.Q then control.down = 0
    elseif key == Enum.KeyCode.Space then control.up = 0
    end
end)

-- Mobile Support
UserInputService.TouchMoved:Connect(function(touch, processed)
    if UserInputService:GetFocusedTextBox() then return end
    
    local touchPos = touch.Position
    local screenSize = ScreenGui.Parent.AbsoluteSize
    
    local deadzoneRadius = 40
    local centerLeft = Vector2.new(screenSize.X * 0.15, screenSize.Y * 0.85)
    
    local diff = touchPos - centerLeft
    if diff.Magnitude > deadzoneRadius then
        local dir = diff.Unit
        mobileMovement.x = math.min(1, dir.X)
        mobileMovement.y = math.min(1, -dir.Y)
    else
        mobileMovement.x = 0
        mobileMovement.y = 0
    end
end)

UserInputService.TouchEnded:Connect(function(touch, processed)
    mobileMovement.x = 0
    mobileMovement.y = 0
end)

-- Respawn Handling
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoidRootPart = character:WaitForChild("HumanoidRootPart", 5)
    humanoid = character:WaitForChild("Humanoid", 5)
    positionHistory = {}
    lastPosition = humanoidRootPart.Position
    
    local wasFlying = flying
    local wasNoclipping = noclipping
    
    if wasFlying or wasNoclipping then
        task.wait(0.5)
        if wasNoclipping then startNoclip() end
        if wasFlying then startFly() end
    end
end)

-- Initialize
humanoid.WalkSpeed = 16
humanoid.JumpPower = 50

pcall(function()
    humanoidRootPart:SetNetworkOwner(player)
end)

print("✓ Fly & Noclip System loaded!")
print("✓ Anti-Pullback: ACTIVE")
print("✓ Wall Detection: ACTIVE")
print("✓ Mobile Support: ACTIVE")
